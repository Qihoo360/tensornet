---
name: Tensornet Tools

on:
  push:
    tags:
      - '*tool'
  pull_request:

env:
  PIXI_LOCKED: "true"

jobs:
  tn_tools_build:
    runs-on: ubuntu-latest
    steps:
      - name: checkout repository
        uses: actions/checkout@v4

      - name: Set up pixi
        uses: prefix-dev/setup-pixi@v0.8.5
        with:
          pixi-version: v0.45.0
          environments: default tools

      - name: Create wheel
        run: |
          ./pixiw run create-tools-wheel
          test ! -e dist
          mv tensornet_tools/dist ./
          ./pixiw run -e tools check-wheel-contents dist
          ls -alh dist
        shell: micromamba-shell {0}

      - name: Store wheels
        uses: actions/upload-artifact@v4
        with:
          path: dist/
          retention-days: 7

  publish-to-pypi:
    name: Upload to pypi
    if: github.repository == 'Qihoo360/tensornet' && startsWith(github.ref, 'refs/tags/')  # only publish to PyPI on tag pushes
    needs:
      - tn_tools_build
    runs-on: ubuntu-latest
    permissions:
      id-token: write  # mandatory for pypi trusted publishing
      contents: write  # mandatory for create a github release
    steps:
      - name: Download wheels
        uses: actions/download-artifact@v4
        with:
          merge-multiple: true
          path: dist/
      - name: Publish wheels to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          # push v*.rc* tags to test.pypi.org
          repository-url: ${{ contains(github.ref, '.rc') && 'https://test.pypi.org/legacy/' || 'https://upload.pypi.org/legacy/'
            }}
          print-hash: true
      - name: Create a draft release
        uses: softprops/action-gh-release@v2
        with:
          draft: true
          prerelease: ${{ contains(github.ref, '.rc') }}
          generate_release_notes: true
