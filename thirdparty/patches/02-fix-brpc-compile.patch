--- a/src/brpc/redis_command.cpp
+++ b/src/brpc/redis_command.cpp
@@ -19,6 +19,7 @@
 #include "butil/logging.h"
 #include "brpc/log.h"
 #include "brpc/redis_command.h"
+#include <limits> // std::numeric_limits
 
 namespace brpc {
 
--- a/src/bvar/scoped_timer.h
+++ b/src/bvar/scoped_timer.h
@@ -47,7 +47,7 @@
         *_bvar << (butil::cpuwide_time_us() - _start_time);
     }
 
-    void reset() { _start_time = butil::cpuwide_time_us(); }
+    //void reset() { _start_time = butil::cpuwide_time_us(); }
 
 private:
     DISALLOW_COPY_AND_ASSIGN(ScopedTimer);
--- a/src/brpc/http2.h
+++ b/src/brpc/http2.h
@@ -18,6 +18,7 @@
 #ifndef BAIDU_RPC_HTTP2_H
 #define BAIDU_RPC_HTTP2_H
 
+#include <cstdint>
 #include "brpc/http_status_code.h"
 
 // To baidu-rpc developers: This is a header included by user, don't depend
