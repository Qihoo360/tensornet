---
repos:
  - repo: meta
    hooks:
      - id: check-hooks-apply
      - id: check-useless-excludes

  - repo: local
    hooks:
      - id: end-of-file
        name: Check end-of-file
        entry: ./pixiw run -e tools end-of-file-fixer
        language: system
        types: [text]
        stages: [pre-commit, manual]
      - id: trailing-whitespace
        name: Fix trailing whitespace
        entry: ./pixiw run -e tools trailing-whitespace-fixer
        language: system
        types: [text]
        stages: [pre-commit, manual]
        exclude: "\\.patch$"
      - id: fix-byte-order-marker
        name: Fix utf-8 byte order marker
        entry: ./pixiw run -e tools fix-byte-order-marker
        language: system
        types: [text]
        stages: [pre-commit, manual]
      - id: typos
        name: Check spell typos
        entry: ./pixiw run -e tools typos
        language: system
        types: [text]
        stages: [pre-commit, manual]

      - id: check-executables-have-shebangs
        name: Check that executable scripts have shebangs
        entry: ./pixiw run -e tools check-executables-have-shebangs
        language: system
        types: [text, executable]
        stages: [pre-commit, manual]
      - id: check-shebang-scripts-are-executable
        name: Check that scripts with shebangs are executable
        entry: ./pixiw run -e tools check-shebang-scripts-are-executable
        language: system
        types: [text]
        stages: [pre-commit, manual]

      - id: format-yaml
        name: Format YAML
        entry: ./pixiw run -e tools yamlfmt
        language: system
        types: [yaml]
        stages: [pre-commit, manual]
      - id: check-yaml
        name: Check YAML
        entry: ./pixiw run -e tools check-yaml
        language: system
        types: [yaml]
        stages: [pre-commit, manual]
        exclude: ^\.clang-format$
      - id: check-yaml-multi
        name: Check multi-doc YAML
        entry: ./pixiw run -e tools check-yaml --allow-multiple-documents
        language: system
        types: [yaml]
        stages: [pre-commit, manual]
        files: ^\.clang-format$
      - id: toml-format
        name: TOML format
        entry: ./pixiw run toml-format
        language: system
        types: [file, toml]
        stages: [pre-commit, manual]
      - id: check-json
        name: Validate json files
        entry: ./pixiw run -e tools check-json
        language: system
        types: [json]
        stages: [pre-commit, manual]
      - id: format-json
        name: Format json files
        entry: ./pixiw run -e tools pretty-format-json --autofix
        language: system
        types: [json]
        stages: [pre-commit, manual]
        exclude: "^doc/"
      - id: shellcheck
        name: Check shell scripts
        entry: ./pixiw run -e tools shellcheck
        language: system
        types: [shell]
        stages: [pre-commit, manual]
      - id: cmake-format
        name: Format cmake list files
        entry: ./pixiw run -e tools cmake-format --in-place
        language: system
        types: [cmake]
        stages: [pre-commit, manual]
      - id: cmake-lint
        name: Lint cmake list files
        entry: ./pixiw run -e tools cmake-lint
        language: system
        types: [cmake]
        stages: [pre-commit, manual]

      - id: clang-format
        name: Format C/C++/Proto files
        entry: ./pixiw run -e tools clang-format -i
        language: system
        types_or: [c++, c, proto]
        stages: [pre-commit, manual]

      - id: ruff-lint
        name: Ruff lint
        entry: ./pixiw run ruff-lint
        language: system
        types_or: [python, pyi]
        require_serial: true
        stages: [pre-commit, manual]
      - id: ruff-format
        name: Ruff format
        entry: ./pixiw run ruff-format
        language: system
        types_or: [python, pyi]
        require_serial: true
        stages: [pre-commit, manual]

      - id: actionlint
        name: Lint GitHub Actions workflow files
        language: system
        entry: ./pixiw run -e tools actionlint
        types: [yaml]
        files: ^\.github/workflows/
        stages: [pre-commit, manual]
