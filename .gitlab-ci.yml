---
workflow:
  rules:
    # avoid duplicate pipelines for branches with opened merge requests
    - if: $CI_COMMIT_BRANCH && $CI_OPEN_MERGE_REQUESTS && $CI_OPEN_MERGE_REQUESTS != ""
      when: never
    - when: always

variables:
  PIXI_LOCKED: "true"

pre_commit:
  tags:
    - python
  interruptible: true
  before_script:
    - mkdir -p .cache ~/.pixi/bin
    - test ! -x .cache/pixi || cp .cache/pixi ~/.pixi/bin/
    - ./pixiw --version
    - diff -q ~/.pixi/bin/pixi .cache/pixi >/dev/null 2>/dev/null || cp ~/.pixi/bin/pixi .cache/
  script:
    - ./pixiw run pre-commit-run --color=always --show-diff-on-failure

bazel_create_wheel:
  tags:
    - python
  interruptible: true
  variables:
    NEED_PREPARE_ENV: "true"
  before_script:
    - pip config set global.index-url "${NEXUS3_PYPI_REPO}"
    - sed -i "s|https://github.com|${NEXUS3_HEADER}/github.com|g" WORKSPACE
    - mkdir -p .cache ~/.local/bin
    - |
      if [ -x .cache/micromamba ]; then
        ln -s `pwd`/.cache/micromamba ~/.local/bin/micromamba
      else
        ./manager prepare_build_env
        NEED_PREPARE_ENV=false
        cp ~/.local/bin/micromamba .cache/
      fi
  script:
    - ./manager build
    - NEED_PREPARE_ENV=false
    - ./manager copy-libs
    - ./manager test
    - ./manager create_dist
    - grep -q '^tensornet$' qihoo_tensornet.egg-info/top_level.txt
    - ls -alh dist
  cache:
    - key: cache-micromamba-$CI_COMMIT_REF_NAME
      paths:
        - .cache/micromamba
      when: always

cmake_create_wheel:
  tags:
    - python
  interruptible: true
  variables:
    OMPI_ALLOW_RUN_AS_ROOT: 1
    OMPI_ALLOW_RUN_AS_ROOT_CONFIRM: 1
  before_script:
    - mkdir -p .cache ~/.pixi/bin
    - test ! -x .cache/pixi || cp .cache/pixi ~/.pixi/bin/
    - ./pixiw --version
    - diff -q ~/.pixi/bin/pixi .cache/pixi >/dev/null 2>/dev/null || cp ~/.pixi/bin/pixi .cache/

  script:
    - ./pixiw run create-wheel
    - ./pixiw run -e tools check-wheel-contents dist
    - grep -q '^tensornet$' qihoo_tensornet.egg-info/top_level.txt
    - ls -alh dist
  cache:
    - key: cache-pixi-$CI_COMMIT_REF_NAME
      paths:
        - .cache/pixi
      when: always

cmake_build:
  tags:
    - python
  interruptible: true
  variables:
    OMPI_ALLOW_RUN_AS_ROOT: 1
    OMPI_ALLOW_RUN_AS_ROOT_CONFIRM: 1
  before_script:
    - mkdir -p .cache ~/.pixi/bin
    - test ! -x .cache/pixi || cp .cache/pixi ~/.pixi/bin/
    - ./pixiw --version
    - diff -q ~/.pixi/bin/pixi .cache/pixi >/dev/null 2>/dev/null || cp ~/.pixi/bin/pixi .cache/

  script:
    - ./pixiw run build
    - err=0
    - objdump -T build/debug/libtensornet.so | grep GLIBC_ | grep -v '0000000000000000\s*w\s*DF' | grep -v 'GLIBC_\([01]\|2\.[0-9]\|2\.1[012]\)[^0-9]'
      || err=$?
    - test $err = 1
    - err=0
    - objdump -T build/debug/_pywrap_tn.cpython-38-x86_64-linux-gnu.so | grep GLIBC_ | grep -v '0000000000000000\s*w\s*DF'
      | grep -v 'GLIBC_\([01]\|2\.[0-9]\|2\.1[012]\)[^0-9]' || err=$?
    - test $err = 1
  cache:
    - key: cache-pixi-$CI_COMMIT_REF_NAME
      paths:
        - .cache/pixi
      when: always

create_tools_wheel:
  tags:
    - python
  interruptible: true
  before_script:
    - mkdir -p .cache ~/.pixi/bin
    - test ! -x .cache/pixi || cp .cache/pixi ~/.pixi/bin/
    - ./pixiw --version
    - diff -q ~/.pixi/bin/pixi .cache/pixi >/dev/null 2>/dev/null || cp ~/.pixi/bin/pixi .cache/

  script:
    - ./pixiw run create-tools-wheel
    - ./pixiw run -e tools check-wheel-contents tensornet_tools/dist
    - grep -q '^tensornet_tools$' qihoo_tensornet_tools.egg-info/top_level.txt
    - ls -alh tensornet_tools/dist
  cache:
    - key: cache-pixi-$CI_COMMIT_REF_NAME
      paths:
        - .cache/pixi
      when: always
